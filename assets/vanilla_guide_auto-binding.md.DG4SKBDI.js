import{_ as a,c as n,aC as t,o}from"./chunks/framework.Blpdv6_i.js";const g=JSON.parse('{"title":"Auto Binding","description":"","frontmatter":{"title":"Auto Binding"},"headers":[],"params":{"framework":"vanilla","slug":"guide/auto-binding"},"relativePath":"vanilla/guide/auto-binding.md","filePath":"vanilla/guide/auto-binding.md"}'),i={name:"vanilla/guide/auto-binding.md"};function d(r,e,l,u,c,p){return o(),n("div",null,e[0]||(e[0]=[t('<h1 id="auto-binding" tabindex="-1">Auto Binding <a class="header-anchor" href="#auto-binding" aria-label="Permalink to &quot;Auto Binding&quot;">​</a></h1><p>In this page, we will explain how auto binding works in <strong>Ez Form</strong>.</p><h2 id="updating-data-1" tabindex="-1">Updating data <a class="header-anchor" href="#updating-data-1" aria-label="Permalink to &quot;Updating data&quot;">​</a></h2><p><strong>Ez Form</strong> will query field input based on <code>name</code> prop. Then, listen to event <code>change</code> to update data and pass data to your input component via prop <code>value</code>. You can change these props name by updating these options:</p><ul><li><code>valuePropName</code>: The name of <code>value</code> prop in your input.</li><li><code>changeEventName</code>: The name of <code>change</code> event in your input.</li></ul><p>These options may useful when working with <em>checkbox</em> or <em>radio</em>.</p><h2 id="blur-event-1" tabindex="-1">Blur event <a class="header-anchor" href="#blur-event-1" aria-label="Permalink to &quot;Blur event&quot;">​</a></h2><p>By default, <strong>Ez Form</strong> will listen to event <code>blur</code> to determine is input blur. You can change this event name by updating the following option:</p><ul><li><code>blurEventName</code>: The name of <code>blur</code> event in your input.</li></ul>',9)]))}const h=a(i,[["render",d]]);export{g as __pageData,h as default};
